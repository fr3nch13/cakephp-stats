stages:
    - standards
    - analyze
    - test
    - completed

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
    - .composercache/

.global_settings: &global_settings
    interruptible: true
    allow_failure: false
    coverage: '/^\s*Lines:\s*\d+.\d+\%/'

variables:
    MYSQL_DATABASE: $CI_DB_DATABASE
    MYSQL_ROOT_PASSWORD: $CI_DB_PASSWORD
    MYSQL_USER: $CI_DB_USERNAME
    MYSQL_PASSWORD: $CI_DB_PASSWORD

default:
    before_script:
    - git config --global http.sslVerify false # for the internally signed certs in
    - composer config cache-files-dir .composercache
    - composer config github-oauth.github.com $GITHUB_TOKEN
    - export COMPOSER_PROCESS_TIMEOUT=1800
    - mkdir -p $HOME/.docker
    - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json
    - cp ./tests/pushover-config ./pushover-config
    - sed -i "s#__PUSHOVER_USER__#$PUSHOVER_USER#g" ./pushover-config
    - sed -i "s#__PUSHOVER_APP__#$PUSHOVER_APP#g" ./pushover-config
    - sed -i "s#__PUSHOVER_DEVICE__#$PUSHOVER_DEVICE#g" ./pushover-config
    - cp ./tests/.env.test ./tests/.env
    - sed -i "s#__CI_DB_DATABASE__#$CI_DB_DATABASE#g" ./tests/.env
    - sed -i "s#__CI_DB_HOST__#$CI_DB_HOST#g" ./tests/.env
    - sed -i "s#__CI_DB_PASSWORD__#$CI_DB_PASSWORD#g" ./tests/.env
    - sed -i "s#__CI_DB_USERNAME__#$CI_DB_USERNAME#g" ./tests/.env
    - sed -i "s#__LDAP_DOMAIN__#$LDAP_DOMAIN#g" ./tests/.env
    - sed -i "s#__LDAP_PORT__#$LDAP_PORT#g" ./tests/.env
    - sed -i "s#__LDAP_BASE_DN__#$LDAP_BASE_DN#g" ./tests/.env
    - sed -i "s#__LDAP_SEARCH_USER__#$LDAP_SEARCH_USER#g" ./tests/.env
    - sed -i "s#__LDAP_SEARCH_KEY__#$LDAP_SEARCH_KEY#g" ./tests/.env
    - sed -i "s#__LDAP_SERVERS__#$LDAP_SERVERS#g" ./tests/.env
    - sed -i "s#__SERVICE_USERNAME__#$SERVICE_USERNAME#g" ./tests/.env
    - sed -i "s#__SERVICE_PASSWORD__#$SERVICE_PASSWORD#g" ./tests/.env
    - COMPOSER_ROOT_VERSION=2.6.2 composer update

standards:
    stage: standards
    <<: *global_settings
    parallel:
        matrix:
            - PHPV: ["8.0-cli", "8.1-cli", "8.2-cli", "-latest"]
    rules:
        - if: $PHPV == "-latest" && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
          allow_failure: true
        - if: $PHPV && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
    image: fr3nch13702/cakephp:php$PHPV
    script:
    - composer cs-check

analyze:
    stage: analyze
    <<: *global_settings
    parallel:
        matrix:
            - PHPV: ["8.0-cli", "8.1-cli", "8.2-cli", "-latest"]
    rules:
        - if: $PHPV == "-latest" && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
          allow_failure: true
        - if: $PHPV && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
    image: fr3nch13702/cakephp:php$PHPV
    script:
    - composer phpstan

test-coverage:
    stage: test
    <<: *global_settings
    parallel:
        matrix:
            - PHPV: ["8.0-cli", "8.1-cli", "8.2-cli", "-latest"]
              MYSQLV: ["5.7", "8.0", "latest"]
    rules:
        - if: $PHPV == "-latest" && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
          allow_failure: true
        - if: $MYSQLV == "latest" && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
          allow_failure: true
        - if: $PHPV && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
        - if: $MYSQLV && ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
    image: fr3nch13702/cakephp:php$PHPV
    # docker pull fr3nch13702/cakephp:php8.0-cli
    services:
    - mysql:$MYSQLV
    - memcached:latest
    artifacts:
        when: always
        paths:
        - unitreport.xml
        - coverage.cobertura.xml
        reports:
            coverage_report:
                coverage_format: cobertura
                path: coverage.cobertura.xml
            junit: unitreport.xml
    script:
    - service memcached start
    - chmod 750 vendor/bin/wait-for-it.sh
    - chmod 750 vendor/vishnubob/wait-for-it/wait-for-it.sh
    - vendor/bin/wait-for-it.sh $CI_DB_HOST:3306 -t $MYSQL_TIMEOUT
    - echo "SET GLOBAL sql_mode=(SELECT REPLACE(@@sql_mode,'ONLY_FULL_GROUP_BY',''));" | mysql --user=root --password="$MYSQL_ROOT_PASSWORD" --host=$CI_DB_HOST "$MYSQL_DATABASE"
    - composer test-ci

completed:
    stage: completed
    <<: *global_settings
    rules:
        - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "merge_request_event")
    image: fr3nch13702/cakephp:php-latest
    script:
    - chmod 750 vendor/bin/pushover.sh
    - chmod 750 vendor/fr3nch13/pushover-bash/pushover.sh
    - composer pushover-gitlab
